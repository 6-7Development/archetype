REPLIT AGENT PLAN: SELF-HOSTABLE IDE CLONE
​GOAL: Generate a full-stack, container-ready application for a self-hosted Web IDE, based on the open-source technologies defined previously.
​I. ARCHITECTURE & CONTAINERIZATION (The SysOp Focus):
​Docker Setup: "Generate the following files for containerization: a Dockerfile for the Node.js backend and a Dockerfile for the React frontend (or a single multi-stage build file). Also, generate a docker-compose.yml file to define and link the two services (frontend and backend)."
​Execution Sandbox Plan: "Generate a detailed C-language script or Python library structure within the backend service that outlines how to securely execute arbitrary user code (e.g., Python/JavaScript) in an isolated, sandboxed environment using a child process or a lightweight container mechanism (like nsjail or a simple Python subprocess wrapper for a start)."
​II. CODE & DATA INTEGRATION:
​Database Connection: "In the backend Node.js server, implement a file named db.js. Configure this script to use PostgreSQL (or MongoDB, based on your preference) to connect to a database service using environment variables for host, user, and password. Implement functions to saveProjectFile(user, file_id, content) and loadProjectFile(user, file_id)."
​File Management Service: "Replace the current in-memory file structure with the new database functions. All user code edits and project metadata must now be read from and written to the PostgreSQL database."
​Monaco Persistence: "Update the CodeEditor.jsx component to use the new file management service, ensuring the editor loads the last saved file content on startup and saves changes to the backend via an API endpoint triggered by a Socket.io event."
​III. FINAL PREPARATION FOR EXPORT:
​Environment Variables: "Generate a file named .env.example that lists all the required environment variables for the entire project, including: DB_HOST, DB_USER, DB_PASSWORD, DB_NAME, SOCKET_PORT, and a placeholder for an AI_API_KEY."
​README/Deployment Guide: "Update the README.md to include a section titled 'Self-Hosting and Deployment.' This section should provide clear, step-by-step instructions on: cloning the repo, setting the environment variables using the .env.example, building the Docker containers, and running the application using docker-compose up."